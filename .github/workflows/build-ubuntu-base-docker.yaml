name: Run Docker – Ubuntu
################################################################################
# TRIGGERS
################################################################################
on:
  # Build automatically if any Dockerfile is pushed to main
  push:
    branches: [ main ]
    paths:    [ '**/*Dockerfile' ]

  # Build automatically at 00:00 UTC on the 1st of every month
  schedule:
    - cron: '0 0 1 * *'

  # Manual run
  workflow_dispatch:
    inputs:
      working_directory:
        description: 'Working directory passed to the script'
        type: string
        default: 'containers/ubuntu'

      build_context:
        description: 'Docker build context'
        type: string
        default: 'github_workspace'

      docker_image_name:
        description: 'Docker image name (repo/name)'
        type: string
        default: 'ubuntu-base-docker-container/ubuntu-base'

      enable_debug_mode:
        description: 'Enable -DebugMode in the script'
        type: boolean
        default: false

      registry_url:
        description: 'Container registry URL'
        type: string
        default: 'ghcr.io'

      docker_file_name:
        description: 'Dockerfile name'
        type: string
        default: 'Dockerfile'

      push_docker_image:
        description: 'Push image after build?'
        type: string          # Run-Docker.ps1 expects literal “true/false”
        default: 'true'

################################################################################
# JOBS
################################################################################
jobs:
  run-script:
    name: Run Build Script
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: pwsh

    ########################
    # 1.  Resolve defaults #
    ########################
    env:
      IN_WD:     ${{ github.event.inputs.working_directory  || 'containers/ubuntu' }}
      IN_CTX:    ${{ github.event.inputs.build_context      || 'github_workspace'   }}
      IN_IMG:    ${{ github.event.inputs.docker_image_name  || 'ubuntu-base-docker-container/ubuntu-base' }}
      IN_DBG:    ${{ github.event.inputs.enable_debug_mode  || 'false' }}
      IN_PUSH:   ${{ github.event.inputs.push_docker_image  || 'true'  }}
      IN_DFNAME: ${{ github.event.inputs.docker_file_name   || 'Dockerfile' }}
      IN_REG:    ${{ github.event.inputs.registry_url       || 'ghcr.io' }}

    ########################
    # 2.  Steps            #
    ########################
    steps:
      - uses: actions/checkout@v3

      - name: Build & (optionally) push image
        run: |
          # ------------------------------------------------------------------
          # Repo root (absolute path)
          # ------------------------------------------------------------------
          $repoRoot = '${{ github.workspace }}'

          # ------------------------------------------------------------------
          # workingDir  : absolute path to the folder we cd into
          # contextPath : absolute build context for docker build
          # ------------------------------------------------------------------
          if ($Env:IN_WD  -eq 'github_workspace') { $workingDir  = $repoRoot } else { $workingDir  = Join-Path $repoRoot $Env:IN_WD  }
          if ($Env:IN_CTX -eq 'github_workspace') { $contextPath = $repoRoot } else { $contextPath = Join-Path $repoRoot $Env:IN_CTX }

          ./Run-Docker.ps1 `
            -WorkingDirectory $workingDir `
            -BuildContext     $contextPath `
            -DockerFileName   $Env:IN_DFNAME `
            -DockerImageName  $Env:IN_IMG `
            -RegistryUrl      $Env:IN_REG `
            -RegistryUsername '${{ secrets.RegistryUsername }}' `
            -RegistryPassword '${{ secrets.RegistryPassword }}' `
            -ImageOrg         '${{ github.repository_owner }}' `
            -PushDockerImage  $Env:IN_PUSH `
            -DebugMode        $Env:IN_DBG
